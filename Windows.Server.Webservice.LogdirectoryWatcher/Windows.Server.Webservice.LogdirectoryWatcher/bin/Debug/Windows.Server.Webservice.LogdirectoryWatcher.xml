<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>Windows.Server.Webservice.LogdirectoryWatcher</ID>
      <Version>1.0.0.115</Version>
    </Identity>
    <Name>Windows.Server.Webservice.LogdirectoryWatcher</Name>
    <References>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.Computer" Base="Windows!Microsoft.Windows.ComputerRole" Accessibility="Public" Abstract="true" Hosted="true" Singleton="false">
          <Property ID="ComputerName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="WindowsVersion" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Description" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS" Base="Windows.Server.Webservice.LogdirectoryWatcher.Computer" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false" />
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache" Base="Windows.Server.Webservice.LogdirectoryWatcher.Computer" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false" />
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat" Base="Windows.Server.Webservice.LogdirectoryWatcher.Computer" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false" />
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" Accessibility="Public" Abstract="true" Base="System!System.LogicalEntity" Hosted="false" Singleton="false" Extension="false">
          <Property ID="ComputerName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="WindowsVersion" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="ComputerDescription" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="TimeZone" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirPath" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirCreationDate" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirModifiedDate" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirScanDate" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirSizeInMB" Type="double" AutoIncrement="false" Key="false" CaseSensitive="false" MinLength="0" Required="false" Scale="0" />
          <Property ID="LogDirNoOfFiles" Type="double" AutoIncrement="false" Key="false" CaseSensitive="false" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" Accessibility="Public" Abstract="false" Base="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" Hosted="false" Singleton="false" Extension="false">
          <Property ID="SiteName" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="Bindings" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="SiteId" Type="double" AutoIncrement="false" Key="false" CaseSensitive="false" Required="false" Scale="0" />
          <Property ID="SitePath" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="Key" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" Accessibility="Public" Abstract="true" Base="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" Hosted="false" Singleton="false" Extension="false">
          <Property ID="SvcVersion" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="SvcDisplayName" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="SvcDescription" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
          <Property ID="Key" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="512" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache" Accessibility="Public" Abstract="false" Base="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" Hosted="false" Singleton="false" Extension="false" />
        <ClassType ID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat" Accessibility="Public" Abstract="false" Base="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" Hosted="false" Singleton="false" Extension="false" />
      </ClassTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.PropertyBag.Filtered" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MonitorItem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Key" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WarningThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ErrorThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="WarningThresholdMegaBytes" Selector="$Config/WarningThresholdMegaBytes$" ParameterType="string" />
          <OverrideableParameter ID="ErrorThresholdMegaBytes" Selector="$Config/ErrorThresholdMegaBytes$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="DS" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.PropertyBag">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <MonitorItem>$Config/MonitorItem$</MonitorItem>
                <WarningThresholdMegaBytes>$Config/WarningThresholdMegaBytes$</WarningThresholdMegaBytes>
                <ErrorThresholdMegaBytes>$Config/ErrorThresholdMegaBytes$</ErrorThresholdMegaBytes>
                <Key>$Config/Key$</Key>
              </DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name="Key"]</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/Key$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="DS" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.PropertyBag" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MonitorItem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WarningThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ErrorThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Key" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="WarningThresholdMegaBytes" Selector="$Config/WarningThresholdMegaBytes$" ParameterType="string" />
          <OverrideableParameter ID="ErrorThresholdMegaBytes" Selector="$Config/ErrorThresholdMegaBytes$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Schedule" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Probe">
                <MonitorItem>$Config/MonitorItem$</MonitorItem>
                <WarningThresholdMegaBytes>$Config/WarningThresholdMegaBytes$</WarningThresholdMegaBytes>
                <ErrorThresholdMegaBytes>$Config/ErrorThresholdMegaBytes$</ErrorThresholdMegaBytes>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Schedule" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Probe" Accessibility="Internal" Batching="false" PassThrough="false">
        <Configuration>
          <xsd:element name="MonitorItem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WarningThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ErrorThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>MonitorLogDirectoryThreeState.ps1</ScriptName>
                <ScriptBody><![CDATA[param($MonitorItem,$WarningThresholdMegaBytes,$ErrorThresholdMegaBytes)

$WarningThresholdMegaBytes = [double]::Parse($WarningThresholdMegaBytes)
$ErrorThresholdMegaBytes   = [double]::Parse($ErrorThresholdMegaBytes)

$Error.Clear()
$ErrorActionPreference = 'Stop'

$api = New-Object -ComObject 'MOM.ScriptAPI'

$computerName        = $env:COMPUTERNAME
$timeZone            =  ([TimeZoneInfo]::Local).Id
$testedAt            = "Tested on: $(Get-Date -Format u) / $(([TimeZoneInfo]::Local).DisplayName)"
$scanDate            = Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
$WindowsVersion      = Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty Caption

try {
	$computerDescription = Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters | Select-Object -ExpandProperty srvcomment
} catch {
	$computerDescription = [string]::Empty
}

$localComputerDomain = ([System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain()).Name
$computerName        = $computerName + '.' + $localComputerDomain

$api.LogScriptEvent('MonitorLogDirectoryThreeState.ps1',300,4,"On computer $($computerName) with searching for $($MonitorItem)")	

if (([string]::IsNullOrEmpty($computerDescription)) -or ([string]::IsNullOrWhiteSpace($computerDescription))) {
	$computerDescription = 'Not-Maintained'
} else {
	$noActionRequiredSo  = 'Keep description'
}

Function Send-PropertyBag {

	param(
		[string]$Key,
		[string]$supplement,
		[string]$logDirPath,
		[string]$logDirModifiedDate,
		[double]$logDirNoOfFiles,
		[double]$logDirSize
	)

	if ($logDirSize -lt $WarningThresholdMegaBytes -and $logDirSize -lt $ErrorThresholdMegaBytes) {
		$state = 'Green'
	} elseif ($logDirSize -ge $WarningThresholdMegaBytes -and $logDirSize -lt $ErrorThresholdMegaBytes) {
		$state = 'Yellow'
	} elseif ($logDirSize -ge $ErrorThresholdMegaBytes) {
		$state = 'Red'
	} else {
		$state = 'Red'
	}

	$supplement  = "`nLog Directory Path: $logDirPath `n"
	$supplement += "Log Directory Modification Date: $logDirModifiedDate `n"
	$supplement += "Log Directory Number of Files: $logDirNoOfFiles `n"
	$supplement += "Log Directory Size in MB: $logDirSize `t"
	$supplement += "Warning threshold in MB: $WarningThresholdMegaBytes `t"
	$supplement += "Error threshold in MB: $ErrorThresholdMegaBytes `n" 	

	#$api.LogScriptEvent('MonitorLogDirectoryThreeState.ps1',302,2,"Send Bag for $($displayName)`n State: $($state) `n Supplement: $($supplement) `n Key: $($Key)`n testedAt $($testedAt)")
						
	$bag = $api.CreatePropertybag()					
	$bag.AddValue("Key",$Key)		
	$bag.AddValue("State",$state)
	$bag.AddValue("testedAt",$testedAt)
	$bag.AddValue("Supplement",$supplement)
	$bag.AddValue("WindowsVersion",$WindowsVersion)
	$bag.AddValue("ComputerDescription",$computerDescription)
	$bag

} 


if ($MonitorItem -eq 'IIS') {

	Import-Module -Name Webadministration
		
	$webSitesIIS   = Get-Website | Select-Object -Property name, id, state, physicalpath, 
			@{Name = "Bindings"; Expression = { ($_.bindings | Select-Object -ExpandProperty collection) -join ';' }} , 
			@{Name = "LogFile"; Expression = { $_.logfile | Select-Object -ExpandProperty directory }} 

	$api.LogScriptEvent('MonitorLogDirectoryThreeState.ps1',301,4,"Found IIS Websites No: $($webSitesIIS.count)")	

	$webSitesAll = New-Object -TypeName System.Collections.ArrayList

	foreach ($webSite in $webSitesIIS) {

		$webBindings = $webSite.Bindings 

		if ($webBindings -match 'http') {
			$webType = 'W3SVC'
		} 

		if ($webBindings -match 'ftp') {
			$webType = 'FTPSVC'
		}
	
		$webLogRootDir = $webSite.LogFile
		$webSiteId     = [double]::Parse($webSite.id)
		$webLogDirectory = $webSite.LogFile + '\' + $webType + $webSiteId

		if ($webLogDirectory -match 'SystemDrive') {
			$webLogDirectory = $webLogDirectory -replace '%SystemDrive%','C:'
		}
	
		if (Test-Path -Path $webLogDirectory) {
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} elseif (Test-Path -Path $webLogRootDir) {
			$webLogDirectory      = $webLogRootDir
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} else {
			$webLogDirectory      = 'Not found: ' + $webLogDirectory
			$webLogDirLastChanged = 'Na'
			$webLogDirCreated     = 'Na'
			$webLogDirNoOfFiles   = [double]::Parse('0')
			$webLogDirSizeMB      = [double]::Parse('0')
		}
	
		$logInfoHash = @{'SiteName' = $webSite.name}
		$logInfoHash.Add('SiteId', $webSiteId)  
		$logInfoHash.Add('Status', $webSite.state)  
		$logInfoHash.Add('SitePath', $webSite.physicalPath)
		$logInfoHash.Add('Bindings', $webBindings)
		$logInfoHash.Add('LogDirScanDate', $scanDate)
		$logInfoHash.Add('TimeZone', $timeZone)
		$logInfoHash.Add('LogDirPath', $webLogDirectory)  
		$logInfoHash.Add('LogDirModifiedDate', $webLogDirLastChanged)    
		$logInfoHash.Add('LogDirCreationDate', $webLogDirCreated)    
		$logInfoHash.Add('LogDirNoOfFiles', $webLogDirNoOfFiles)    
		$logInfoHash.Add('LogDirSizeInMB', $webLogDirSizeMB)   
		$logInfoObj = New-Object -TypeName psobject -Property $logInfoHash
		$null       = $webSitesAll.Add($logInfoObj)		

	} 
	
	foreach ($wbSite in $webSitesAll) {
						
		$Key         = $ComputerName + '-' + $($wbSite.SiteName)
		$Key         = $Key -replace ' ','_'
		$displayName = 'IISWebSite ' + $($wbSite.SiteName) + ' On ' + $ComputerName

		$logDirSize  = [double]::Parse($wbSite.LogDirSizeInMB)		
	
		Send-PropertyBag -Key $Key -supplement $supplement -logDirSize $logDirSize -logDirPath $wbSite.LogDirPath `
						 -logDirModifiedDate $wbSite.LogDirModifiedDate  -logDirNoOfFiles $wbSite.LogDirNoOfFiles 		

	} 

} elseIf ($MonitorItem -eq 'Apache') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Apa* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath        = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\.()_\-: ]{1,}(?=bin\\httpd.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory  = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)	
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}		
	
	$Key         = $ComputerName + '-' + 'ApacheWebSite'
	$displayName = 'ApacheWebSite ' + ' On ' + $ComputerName			
	
	Send-PropertyBag -Key $Key -supplement $supplement -logDirSize $webLogDirSizeMB -logDirPath $wbSite.LogDirPath `
						-logDirModifiedDate $wbSite.LogDirModifiedDate  -logDirNoOfFiles $wbSite.LogDirNoOfFiles 		
	
} elseIf ($MonitorItem -eq 'ApacheTomcat') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Tomcat* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath        = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\._()\-: ]{1,}(?=bin\\tomcat\d{1}.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory  = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}			
		
	$Key         = $ComputerName + '-' + 'ApacheTomcatWebSite'
	$displayName = 'ApacheTomcatWebSite ' + ' On ' + $ComputerName
		
	Send-PropertyBag -Key $Key -supplement $supplement -logDirSize $webLogDirSizeMB -logDirPath $wbSite.LogDirPath `
						-logDirModifiedDate $wbSite.LogDirModifiedDate  -logDirNoOfFiles $wbSite.LogDirNoOfFiles 		

} else {

	$api.LogScriptEvent('MonitorLogDirectoryThreeState.ps1',300,1,"On computer $($computerName) with searching for unconsidered $($MonitorItem)")	

}]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>MonitorItem</Name>
                    <Value>$Config/MonitorItem$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>WarningThresholdMegaBytes</Name>
                    <Value>$Config/WarningThresholdMegaBytes$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>ErrorThresholdMegaBytes</Name>
                    <Value>$Config/ErrorThresholdMegaBytes$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.MonitorType" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="UnderThreshold" NoDetection="false" />
          <MonitorTypeState ID="OverWarningThreshold" NoDetection="false" />
          <MonitorTypeState ID="OverErrorThreshold" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="MonitorItem" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Key" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="WarningThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ErrorThresholdMegaBytes" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="WarningThresholdMegaBytes" Selector="$Config/WarningThresholdMegaBytes$" ParameterType="string" />
          <OverrideableParameter ID="ErrorThresholdMegaBytes" Selector="$Config/ErrorThresholdMegaBytes$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DataSource" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.PropertyBag.Filtered">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <MonitorItem>$Config/MonitorItem$</MonitorItem>
              <Key>$Config/Key$</Key>
              <WarningThresholdMegaBytes>$Config/WarningThresholdMegaBytes$</WarningThresholdMegaBytes>
              <ErrorThresholdMegaBytes>$Config/ErrorThresholdMegaBytes$</ErrorThresholdMegaBytes>
            </DataSource>
            <ProbeAction ID="PassThru" TypeID="System!System.PassThroughProbe" />
            <ProbeAction ID="Probe" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Probe">
              <MonitorItem>$Config/MonitorItem$</MonitorItem>
              <WarningThresholdMegaBytes>$Config/WarningThresholdMegaBytes$</WarningThresholdMegaBytes>
              <ErrorThresholdMegaBytes>$Config/ErrorThresholdMegaBytes$</ErrorThresholdMegaBytes>
            </ProbeAction>
            <ConditionDetection ID="FilterUnderThreshold" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Green</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterOverWarningThreshold" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Yellow</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterOverErrorThreshold" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='State']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Red</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="UnderThreshold">
              <Node ID="FilterUnderThreshold">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OverWarningThreshold">
              <Node ID="FilterOverWarningThreshold">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OverErrorThreshold">
              <Node ID="FilterOverErrorThreshold">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.ApacheTomcat" Target="Windows!Microsoft.Windows.Server.Computer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists6</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Tomcat6</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists7</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Tomcat7</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists8</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Tomcat8</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists9</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Tomcat9</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>WindowsVersion</AttributeName>
              <Path>SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProductName</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>Description</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\LanmanServer\Parameters\srvcomment</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/ComputerName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/WindowsVersion$</Name>
                <Value>$Data/Values/WindowsVersion$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/Description$</Name>
                <Value>$Data/Values/Description$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <Or>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists6</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists7</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists8</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists9</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </Or>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.IIS" Target="Windows!Microsoft.Windows.Server.Computer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists</AttributeName>
              <Path>System\CurrentControlSet\Services\IISAdmin</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>WindowsVersion</AttributeName>
              <Path>SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProductName</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>Description</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\LanmanServer\Parameters\srvcomment</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/ComputerName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/WindowsVersion$</Name>
                <Value>$Data/Values/WindowsVersion$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/Description$</Name>
                <Value>$Data/Values/Description$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery>Values/KeyExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value>true</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.Apache" Target="Windows!Microsoft.Windows.Server.Computer" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists24</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Apache2.4</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists23</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Apache2.3</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists22</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Apache2.2</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>KeyExists20</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\Apache2.0</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>WindowsVersion</AttributeName>
              <Path>SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProductName</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>Description</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\LanmanServer\Parameters\srvcomment</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/ComputerName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/WindowsVersion$</Name>
                <Value>$Data/Values/WindowsVersion$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows.Server.Webservice.LogdirectoryWatcher.Computer"]/Description$</Name>
                <Value>$Data/Values/Description$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <Or>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists24</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists23</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists22</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery>Values/KeyExists20</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value>true</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </Or>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.Apache" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache" />
          <DiscoveryRelationship TypeID="SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>14400</IntervalSeconds>
          <SyncTime />
          <ScriptName>DiscoverLogDirectoryWatcheritems.ps1</ScriptName>
          <ScriptBody><![CDATA[param($sourceId,$managedEntityId,$discoveryItem)

$api                 = New-Object -ComObject 'MOM.ScriptAPI'
$discoveryData       = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$computerName        = $env:COMPUTERNAME
$timeZone            =  ([TimeZoneInfo]::Local).Id
$scanDate            = Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
$WindowsVersion      = Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty Caption

try {
	$computerDescription = Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters | Select-Object -ExpandProperty srvcomment
} catch {
	$computerDescription = [string]::Empty
}

$localComputerDomain = ([System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain()).Name
$computerName        = $computerName + '.' + $localComputerDomain

$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,4,"On computer $($computerName) with searching for $($discoveryItem)")	

if (([string]::IsNullOrEmpty($computerDescription)) -or ([string]::IsNullOrWhiteSpace($computerDescription))) {
	$computerDescription = 'Description-Not-Maintained'
} else {
	$noActionRequiredSo  = 'Keep description'
}
 

if ($discoveryItem -eq 'IIS') {

	Import-Module -Name Webadministration
		
	$webSitesIIS   = Get-Website | Select-Object -Property name, id, state, physicalpath, 
			@{Name = "Bindings"; Expression = { ($_.bindings | Select-Object -ExpandProperty collection) -join ';' }} , 
			@{Name = "LogFile"; Expression = { $_.logfile | Select-Object -ExpandProperty directory }} 

	$webSitesAll = New-Object -TypeName System.Collections.ArrayList

	foreach ($webSite in $webSitesIIS) {

		$webBindings = $webSite.Bindings 

		if ($webBindings -match 'http') {
			$webType = 'W3SVC'
		} 

		if ($webBindings -match 'ftp') {
			$webType = 'FTPSVC'
		}
	
		$webLogRootDir = $webSite.LogFile
		$webSiteId     = [double]::Parse($webSite.id)
		$webLogDirectory = $webSite.LogFile + '\' + $webType + $webSiteId

		if ($webLogDirectory -match 'SystemDrive') {
			$webLogDirectory = $webLogDirectory -replace '%SystemDrive%','C:'
		}
	
		if (Test-Path -Path $webLogDirectory) {
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} elseif (Test-Path -Path $webLogRootDir) {
			$webLogDirectory      = $webLogRootDir
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} else {
			$webLogDirectory      = 'Not found: ' + $webLogDirectory
			$webLogDirLastChanged = 'Na'
			$webLogDirCreated     = 'Na'
			$webLogDirNoOfFiles   = [double]::Parse('0')
			$webLogDirSizeMB      = [double]::Parse('0')
		}
	
		$logInfoHash = @{'SiteName' = $webSite.name}
		$logInfoHash.Add('SiteId', $webSiteId)  
		$logInfoHash.Add('Status', $webSite.state)  
		$logInfoHash.Add('SitePath', $webSite.physicalPath)
		$logInfoHash.Add('Bindings', $webBindings)
		$logInfoHash.Add('LogDirScanDate', $scanDate)
		$logInfoHash.Add('TimeZone', $timeZone)
		$logInfoHash.Add('LogDirPath', $webLogDirectory)  
		$logInfoHash.Add('LogDirModifiedDate', $webLogDirLastChanged)    
		$logInfoHash.Add('LogDirCreationDate', $webLogDirCreated)    
		$logInfoHash.Add('LogDirNoOfFiles', $webLogDirNoOfFiles)    
		$logInfoHash.Add('LogDirSizeInMB', $webLogDirSizeMB)   
		$logInfoObj = New-Object -TypeName psobject -Property $logInfoHash
		$null       = $webSitesAll.Add($logInfoObj)		

	} #End foreach ($webSite in $webSitesIIS)
	
	foreach ($wbSite in $webSitesAll) {
		
		$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
		$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
		$discoveryData.AddInstance($healthInstance)		
		
		$Key         = $ComputerName + '-' + $($wbSite.SiteName)
		$key         = $Key -replace ' ','_'
		$displayName = 'IISWebSite ' + $($wbSite.SiteName) + ' On ' + $ComputerName

		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']$")
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)					
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$wbSite.TimeZone)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$wbSite.LogDirPath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$wbSite.LogDirCreationDate)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$wbSite.LogDirModifiedDate)		
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$wbSite.LogDirScanDate)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$wbSite.LogDirSizeInMB)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$wbSite.LogDirNoOfFiles)			
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteName$",$wbSite.SiteName)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Bindings$",$wbSite.Bindings)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteId$",$wbSite.SiteId)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SitePath$",$wbSite.SitePath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Key$",$Key)
		$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
		$discoveryData.AddInstance($instance)	
				
		$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
		$relHealthInstance.Source = $healthInstance
		$relHealthInstance.Target = $instance									
		$discoveryData.AddInstance($relHealthInstance)
		
	} #End foreach ($wbSite in $webSitesAll)	

} elseIf ($discoveryItem -eq 'Apache') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Apa* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\.()_\-: ]{1,}(?=bin\\httpd.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)	
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}	
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)				
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)	
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} elseIf ($discoveryItem -eq 'ApacheTomcat') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Tomcat* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\._()\-: ]{1,}(?=bin\\tomcat\d{1}.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}		
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheTomcatWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheTomcatWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)		
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} else {

	$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,1,"On computer $($computerName) with searching for unconsidered $($discoveryItem)")	

}
 
$discoveryData]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>discoveryItem</Name>
              <Value>Apache</Value>
            </Parameter>
            <Parameter>
              <Name>ComputerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.IIS" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" />
          <DiscoveryRelationship TypeID="SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>14400</IntervalSeconds>
          <SyncTime />
          <ScriptName>DiscoverLogDirectoryWatcheritems.ps1</ScriptName>
          <ScriptBody><![CDATA[param($sourceId,$managedEntityId,$discoveryItem)

$api                 = New-Object -ComObject 'MOM.ScriptAPI'
$discoveryData       = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$computerName        = $env:COMPUTERNAME
$timeZone            =  ([TimeZoneInfo]::Local).Id
$scanDate            = Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
$WindowsVersion      = Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty Caption

try {
	$computerDescription = Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters | Select-Object -ExpandProperty srvcomment
} catch {
	$computerDescription = [string]::Empty
}

$localComputerDomain = ([System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain()).Name
$computerName        = $computerName + '.' + $localComputerDomain

$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,4,"On computer $($computerName) with searching for $($discoveryItem)")	

if (([string]::IsNullOrEmpty($computerDescription)) -or ([string]::IsNullOrWhiteSpace($computerDescription))) {
	$computerDescription = 'Description-Not-Maintained'
} else {
	$noActionRequiredSo  = 'Keep description'
}
 

if ($discoveryItem -eq 'IIS') {

	Import-Module -Name Webadministration
		
	$webSitesIIS   = Get-Website | Select-Object -Property name, id, state, physicalpath, 
			@{Name = "Bindings"; Expression = { ($_.bindings | Select-Object -ExpandProperty collection) -join ';' }} , 
			@{Name = "LogFile"; Expression = { $_.logfile | Select-Object -ExpandProperty directory }} 

	$webSitesAll = New-Object -TypeName System.Collections.ArrayList

	foreach ($webSite in $webSitesIIS) {

		$webBindings = $webSite.Bindings 

		if ($webBindings -match 'http') {
			$webType = 'W3SVC'
		} 

		if ($webBindings -match 'ftp') {
			$webType = 'FTPSVC'
		}
	
		$webLogRootDir = $webSite.LogFile
		$webSiteId     = [double]::Parse($webSite.id)
		$webLogDirectory = $webSite.LogFile + '\' + $webType + $webSiteId

		if ($webLogDirectory -match 'SystemDrive') {
			$webLogDirectory = $webLogDirectory -replace '%SystemDrive%','C:'
		}
	
		if (Test-Path -Path $webLogDirectory) {
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} elseif (Test-Path -Path $webLogRootDir) {
			$webLogDirectory      = $webLogRootDir
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} else {
			$webLogDirectory      = 'Not found: ' + $webLogDirectory
			$webLogDirLastChanged = 'Na'
			$webLogDirCreated     = 'Na'
			$webLogDirNoOfFiles   = [double]::Parse('0')
			$webLogDirSizeMB      = [double]::Parse('0')
		}
	
		$logInfoHash = @{'SiteName' = $webSite.name}
		$logInfoHash.Add('SiteId', $webSiteId)  
		$logInfoHash.Add('Status', $webSite.state)  
		$logInfoHash.Add('SitePath', $webSite.physicalPath)
		$logInfoHash.Add('Bindings', $webBindings)
		$logInfoHash.Add('LogDirScanDate', $scanDate)
		$logInfoHash.Add('TimeZone', $timeZone)
		$logInfoHash.Add('LogDirPath', $webLogDirectory)  
		$logInfoHash.Add('LogDirModifiedDate', $webLogDirLastChanged)    
		$logInfoHash.Add('LogDirCreationDate', $webLogDirCreated)    
		$logInfoHash.Add('LogDirNoOfFiles', $webLogDirNoOfFiles)    
		$logInfoHash.Add('LogDirSizeInMB', $webLogDirSizeMB)   
		$logInfoObj = New-Object -TypeName psobject -Property $logInfoHash
		$null       = $webSitesAll.Add($logInfoObj)		

	} #End foreach ($webSite in $webSitesIIS)
	
	foreach ($wbSite in $webSitesAll) {
		
		$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
		$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
		$discoveryData.AddInstance($healthInstance)		
		
		$Key         = $ComputerName + '-' + $($wbSite.SiteName)
		$key         = $Key -replace ' ','_'
		$displayName = 'IISWebSite ' + $($wbSite.SiteName) + ' On ' + $ComputerName

		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']$")
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)					
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$wbSite.TimeZone)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$wbSite.LogDirPath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$wbSite.LogDirCreationDate)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$wbSite.LogDirModifiedDate)		
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$wbSite.LogDirScanDate)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$wbSite.LogDirSizeInMB)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$wbSite.LogDirNoOfFiles)			
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteName$",$wbSite.SiteName)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Bindings$",$wbSite.Bindings)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteId$",$wbSite.SiteId)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SitePath$",$wbSite.SitePath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Key$",$Key)
		$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
		$discoveryData.AddInstance($instance)	
				
		$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
		$relHealthInstance.Source = $healthInstance
		$relHealthInstance.Target = $instance									
		$discoveryData.AddInstance($relHealthInstance)
		
	} #End foreach ($wbSite in $webSitesAll)	

} elseIf ($discoveryItem -eq 'Apache') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Apa* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\.()_\-: ]{1,}(?=bin\\httpd.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)	
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}	
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)				
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)	
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} elseIf ($discoveryItem -eq 'ApacheTomcat') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Tomcat* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\._()\-: ]{1,}(?=bin\\tomcat\d{1}.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}		
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheTomcatWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheTomcatWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)		
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} else {

	$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,1,"On computer $($computerName) with searching for unconsidered $($discoveryItem)")	

}
 
$discoveryData]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>discoveryItem</Name>
              <Value>IIS</Value>
            </Parameter>
            <Parameter>
              <Name>ComputerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.ApacheTomcat" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat" />
          <DiscoveryRelationship TypeID="SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>14400</IntervalSeconds>
          <SyncTime />
          <ScriptName>DiscoverLogDirectoryWatcheritems.ps1</ScriptName>
          <ScriptBody><![CDATA[param($sourceId,$managedEntityId,$discoveryItem)

$api                 = New-Object -ComObject 'MOM.ScriptAPI'
$discoveryData       = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$computerName        = $env:COMPUTERNAME
$timeZone            =  ([TimeZoneInfo]::Local).Id
$scanDate            = Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
$WindowsVersion      = Get-WmiObject -Class Win32_OperatingSystem | Select-Object -ExpandProperty Caption

try {
	$computerDescription = Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters | Select-Object -ExpandProperty srvcomment
} catch {
	$computerDescription = [string]::Empty
}

$localComputerDomain = ([System.DirectoryServices.ActiveDirectory.Domain]::GetComputerDomain()).Name
$computerName        = $computerName + '.' + $localComputerDomain

$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,4,"On computer $($computerName) with searching for $($discoveryItem)")	

if (([string]::IsNullOrEmpty($computerDescription)) -or ([string]::IsNullOrWhiteSpace($computerDescription))) {
	$computerDescription = 'Description-Not-Maintained'
} else {
	$noActionRequiredSo  = 'Keep description'
}
 

if ($discoveryItem -eq 'IIS') {

	Import-Module -Name Webadministration
		
	$webSitesIIS   = Get-Website | Select-Object -Property name, id, state, physicalpath, 
			@{Name = "Bindings"; Expression = { ($_.bindings | Select-Object -ExpandProperty collection) -join ';' }} , 
			@{Name = "LogFile"; Expression = { $_.logfile | Select-Object -ExpandProperty directory }} 

	$webSitesAll = New-Object -TypeName System.Collections.ArrayList

	foreach ($webSite in $webSitesIIS) {

		$webBindings = $webSite.Bindings 

		if ($webBindings -match 'http') {
			$webType = 'W3SVC'
		} 

		if ($webBindings -match 'ftp') {
			$webType = 'FTPSVC'
		}
	
		$webLogRootDir = $webSite.LogFile
		$webSiteId     = [double]::Parse($webSite.id)
		$webLogDirectory = $webSite.LogFile + '\' + $webType + $webSiteId

		if ($webLogDirectory -match 'SystemDrive') {
			$webLogDirectory = $webLogDirectory -replace '%SystemDrive%','C:'
		}
	
		if (Test-Path -Path $webLogDirectory) {
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} elseif (Test-Path -Path $webLogRootDir) {
			$webLogDirectory      = $webLogRootDir
			$webLogDirTmp         = Get-Item -Path $webLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
			$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
			$webLogDirNoOfFiles   = [double]::Parse((Get-ChildItem -Path $webLogDirectory).Count)		
			$webLogDirSizeMB      = [double]::Parse(([Math]::Round(((Get-ChildItem -Path $webLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)))
		} else {
			$webLogDirectory      = 'Not found: ' + $webLogDirectory
			$webLogDirLastChanged = 'Na'
			$webLogDirCreated     = 'Na'
			$webLogDirNoOfFiles   = [double]::Parse('0')
			$webLogDirSizeMB      = [double]::Parse('0')
		}
	
		$logInfoHash = @{'SiteName' = $webSite.name}
		$logInfoHash.Add('SiteId', $webSiteId)  
		$logInfoHash.Add('Status', $webSite.state)  
		$logInfoHash.Add('SitePath', $webSite.physicalPath)
		$logInfoHash.Add('Bindings', $webBindings)
		$logInfoHash.Add('LogDirScanDate', $scanDate)
		$logInfoHash.Add('TimeZone', $timeZone)
		$logInfoHash.Add('LogDirPath', $webLogDirectory)  
		$logInfoHash.Add('LogDirModifiedDate', $webLogDirLastChanged)    
		$logInfoHash.Add('LogDirCreationDate', $webLogDirCreated)    
		$logInfoHash.Add('LogDirNoOfFiles', $webLogDirNoOfFiles)    
		$logInfoHash.Add('LogDirSizeInMB', $webLogDirSizeMB)   
		$logInfoObj = New-Object -TypeName psobject -Property $logInfoHash
		$null       = $webSitesAll.Add($logInfoObj)		

	} #End foreach ($webSite in $webSitesIIS)
	
	foreach ($wbSite in $webSitesAll) {
		
		$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
		$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
		$discoveryData.AddInstance($healthInstance)		
		
		$Key         = $ComputerName + '-' + $($wbSite.SiteName)
		$key         = $Key -replace ' ','_'
		$displayName = 'IISWebSite ' + $($wbSite.SiteName) + ' On ' + $ComputerName

		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']$")
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)					
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$wbSite.TimeZone)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$wbSite.LogDirPath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$wbSite.LogDirCreationDate)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$wbSite.LogDirModifiedDate)		
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$wbSite.LogDirScanDate)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$wbSite.LogDirSizeInMB)
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$wbSite.LogDirNoOfFiles)			
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteName$",$wbSite.SiteName)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Bindings$",$wbSite.Bindings)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SiteId$",$wbSite.SiteId)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/SitePath$",$wbSite.SitePath)	
		$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS']/Key$",$Key)
		$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
		$discoveryData.AddInstance($instance)	
				
		$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
		$relHealthInstance.Source = $healthInstance
		$relHealthInstance.Target = $instance									
		$discoveryData.AddInstance($relHealthInstance)
		
	} #End foreach ($wbSite in $webSitesAll)	

} elseIf ($discoveryItem -eq 'Apache') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Apa* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\.()_\-: ]{1,}(?=bin\\httpd.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)	
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}	
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)				
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)	
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} elseIf ($discoveryItem -eq 'ApacheTomcat') {

	$apacheReg = Get-ChildItem -Path HKLM:\SYSTEM\CurrentControlSet\services\Tomcat* | Select-Object -ExpandProperty Name
	$apacheReg = $apacheReg -replace 'HKEY_LOCAL_MACHINE','HKLM:\\'

	$apachePath = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty ImagePath
	$apacheDescription = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty Description
	$apacheDisplayName = Get-ItemProperty -Path $apacheReg | Select-Object -ExpandProperty DisplayName

	$apacheBaseDirectory = [Regex]::Matches($apachePath,'(?i)[a-z\\0-9\._()\-: ]{1,}(?=bin\\tomcat\d{1}.exe)') | Select-Object -ExpandProperty Value 
	$apacheLogDirectory = $apacheBaseDirectory + 'logs'

	$apacheVersion = $apacheReg.Substring($apacheReg.LastIndexOf('\'),($apacheReg.Length - $apacheReg.LastIndexOf('\'))) 
	$apacheVersion = $apacheVersion -replace '\\',''
	
	if (Test-Path -Path $apacheLogDirectory) {
		$webLogDirTmp         = Get-Item -Path $apacheLogDirectory | Select-Object -Property Name, LastWriteTime, CreationTime
		$webLogDirLastChanged = $webLogDirTmp | Select-Object -ExpandProperty LastWriteTime | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirCreated     = $webLogDirTmp | Select-Object -ExpandProperty CreationTime  | Get-Date -Format 'yyyy-MM-dd hh:MM:ss' 
		$webLogDirNoOfFiles   = (Get-ChildItem -Path $apacheLogDirectory).Count		
		$webLogDirSizeMB      = [Math]::Round(((Get-ChildItem -Path $apacheLogDirectory | Measure-Object -property length -sum).Sum / 1MB), 1)
	} else {
		$webLogDirectory      = 'Not found: ' + $webLogDirectory
		$webLogDirLastChanged = 'Na'
		$webLogDirCreated     = 'Na'
		$webLogDirNoOfFiles   = [double]::Parse('0')
		$webLogDirSizeMB      = [double]::Parse('0')
	}		
		
	$healthInstance = $discoveryData.CreateClassInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthService']$")		
	$healthInstance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)			
	$discoveryData.AddInstance($healthInstance)		
	
	$Key         = $ComputerName + '-' + 'ApacheTomcatWebSite'
	$key         = $Key -replace ' ','_'
	$displayName = 'ApacheTomcatWebSite ' + ' On ' + $ComputerName

	$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat']$")			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerName$",$ComputerName)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/WindowsVersion$",$WindowsVersion)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/ComputerDescription$",$computerDescription)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/TimeZone$",$timeZone)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirPath$",$apacheLogDirectory)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirCreationDate$",$webLogDirCreated)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirModifiedDate$",$webLogDirLastChanged)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirScanDate$",$scanDate)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirSizeInMB$",$webLogDirSizeMB)	
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base']/LogDirNoOfFiles$",$webLogDirNoOfFiles)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcVersion$",$apacheVersion)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDisplayName$",$apacheDisplayName)			
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/SvcDescription$",$apacheDescription)
	$instance.AddProperty("$MPElement[Name='Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase']/Key$",$Key)
	$instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $displayName)
	$discoveryData.AddInstance($instance)		
		
	$relHealthInstance        = $discoveryData.CreateRelationShipInstance("$MPElement[Name='SC!Microsoft.SystemCenter.HealthServiceShouldManageEntity']$")
	$relHealthInstance.Source = $healthInstance
	$relHealthInstance.Target = $instance									
	$discoveryData.AddInstance($relHealthInstance)
	
} else {

	$api.LogScriptEvent('DiscoverAdminInfoItmes.ps1',200,1,"On computer $($computerName) with searching for unconsidered $($discoveryItem)")	

}
 
$discoveryData]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>discoveryItem</Name>
              <Value>ApacheTomcat</Value>
            </Parameter>
            <Parameter>
              <Name>ComputerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <UnitMonitor ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat" Accessibility="Public" Enabled="true" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='testedAt']$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='Supplement']$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='ComputerDescription']$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name='WindowsVersion']$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverWarningThreshold" MonitorTypeStateID="OverWarningThreshold" HealthState="Warning" />
          <OperationalState ID="OverErrorThreshold" MonitorTypeStateID="OverErrorThreshold" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>600</IntervalSeconds>
          <SyncTime />
          <MonitorItem>ApacheTomcat</MonitorItem>
          <Key>$Target/Property[Type="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase"]/Key$</Key>
          <WarningThresholdMegaBytes>2500</WarningThresholdMegaBytes>
          <ErrorThresholdMegaBytes>5000</ErrorThresholdMegaBytes>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS" Accessibility="Public" Enabled="true" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='testedAt']$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='Supplement']$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='ComputerDescription']$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name='WindowsVersion']$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverWarningThreshold" MonitorTypeStateID="OverWarningThreshold" HealthState="Warning" />
          <OperationalState ID="OverErrorThreshold" MonitorTypeStateID="OverErrorThreshold" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>600</IntervalSeconds>
          <SyncTime />
          <MonitorItem>IIS</MonitorItem>
          <Key>$Target/Property[Type="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS"]/Key$</Key>
          <WarningThresholdMegaBytes>2500</WarningThresholdMegaBytes>
          <ErrorThresholdMegaBytes>5000</ErrorThresholdMegaBytes>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache" Accessibility="Public" Enabled="true" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.ThreeState.Test.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='testedAt']$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='Supplement']$</AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='ComputerDescription']$</AlertParameter3>
            <AlertParameter4>$Data/Context/Property[@Name='WindowsVersion']$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="UnderThreshold" MonitorTypeStateID="UnderThreshold" HealthState="Success" />
          <OperationalState ID="OverWarningThreshold" MonitorTypeStateID="OverWarningThreshold" HealthState="Warning" />
          <OperationalState ID="OverErrorThreshold" MonitorTypeStateID="OverErrorThreshold" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>600</IntervalSeconds>
          <SyncTime />
          <MonitorItem>Apache</MonitorItem>
          <Key>$Target/Property[Type="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase"]/Key$</Key>
          <WarningThresholdMegaBytes>2500</WarningThresholdMegaBytes>
          <ErrorThresholdMegaBytes>5000</ErrorThresholdMegaBytes>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.Computers" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="50">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="420">
            <Name>Description</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/Description</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.Computers" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="50">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="420">
            <Name>Description</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/Description</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.Computers" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="50">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="420">
            <Name>Description</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.Computer/Description</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="true" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>ComputerDescription</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerDescription</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>LogDirPath</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirModifiedDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirModifiedDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirScanDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirScanDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="120">
            <Name>LogDirSizeInMB</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirSizeInMB</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>ComputerDescription</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerDescription</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>LogDirPath</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirModifiedDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirModifiedDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirScanDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirScanDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="120">
            <Name>LogDirSizeInMB</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirSizeInMB</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Presentation>
          <ColumnInfo Index="0" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>State</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="120">
            <Name>ComputerName</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="220">
            <Name>WindowsVersion</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/WindowsVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>ComputerDescription</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/ComputerDescription</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="320">
            <Name>LogDirPath</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirModifiedDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirModifiedDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" Grouped="false" IsSortable="true" Sorted="false" SortIndex="0" Visible="true" SortOrder="Ascending" Width="180">
            <Name>LogDirScanDate</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirScanDate</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" Grouped="false" IsSortable="true" Sorted="true" SortIndex="0" Visible="true" SortOrder="Descending" Width="120">
            <Name>LogDirSizeInMB</Name>
            <Id>Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base/LogDirSizeInMB</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.Apache.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.IIS.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
      </View>
      <View ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.ApacheTomcat.WebSites" Accessibility="Internal" Target="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <ResolutionState>
            <StateRange Operator="NotEquals">255</StateRange>
          </ResolutionState>
        </Criteria>
      </View>
    </Views>
    <Folders>
      <Folder ID="Windows.Server.Webservice.LogdirectoryWatcher.Folders" Accessibility="Internal" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
      <Folder ID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Information" Accessibility="Internal" ParentFolder="Windows.Server.Webservice.LogdirectoryWatcher.Folders" />
      <Folder ID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.HealthState" Accessibility="Internal" ParentFolder="Windows.Server.Webservice.LogdirectoryWatcher.Folders" />
      <Folder ID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Alerts" Accessibility="Internal" ParentFolder="Windows.Server.Webservice.LogdirectoryWatcher.Folders" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.Computers" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Information" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.Computers.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.Computers" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Information" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.Computers.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.Computers" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Information" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.Computers.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.HealthState" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.WebSites.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.HealthState" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.WebSites.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.HealthState" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.WebSites.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.Apache.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Alerts" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.Apache.WebSites.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.IIS.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Alerts" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.IIS.WebSites.FolderItem" />
      <FolderItem ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.ApacheTomcat.WebSites" Folder="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Alerts" ID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.ApacheTomcat.WebSites.FolderItem" />
    </FolderItems>
    <StringResources>
      <StringResource ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat.AlertMessage" />
      <StringResource ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS.AlertMessage" />
      <StringResource ID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat">
          <Name>Monitor LogDirectorySize ApacheTomcat</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat.AlertMessage">
          <Name>ApacheTomcat WebSite's LogDirectory size limit reached</Name>
          <Description>ApacheTomcat WebSite's LogDirectory size limit reached


TestedAt: {0}

{1}


Computer Description: {2}

Windows Version: {3}</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat" SubElementID="UnderThreshold">
          <Name>UnderThreshold</Name>
          <Description>UnderThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat" SubElementID="OverWarningThreshold">
          <Name>OverWarningThreshold</Name>
          <Description>OverWarningThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.ApacheTomcat" SubElementID="OverErrorThreshold">
          <Name>OverErrorThreshold</Name>
          <Description>OverErrorThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS">
          <Name>Monitor LogDirectorySize IIS</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS.AlertMessage">
          <Name>IIS WebSite's LogDirectory size limit reached</Name>
          <Description>IIS WebSite's LogDirectory size limit reached


TestedAt: {0}

{1}


Computer Description: {2}

Windows Version: {3}</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS" SubElementID="UnderThreshold">
          <Name>UnderThreshold</Name>
          <Description>UnderThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS" SubElementID="OverWarningThreshold">
          <Name>OverWarningThreshold</Name>
          <Description>OverWarningThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.IIS" SubElementID="OverErrorThreshold">
          <Name>OverErrorThreshold</Name>
          <Description>OverErrorThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache">
          <Name>Monitor LogDirectorySize Apache</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache.AlertMessage">
          <Name>Apache WebSite's LogDirectory size limit reached</Name>
          <Description>Apache WebSite's LogDirectory size limit reached


TestedAt: {0}

{1}


Computer Description: {2}

Windows Version: {3}</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache" SubElementID="UnderThreshold">
          <Name>UnderThreshold</Name>
          <Description>UnderThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache" SubElementID="OverWarningThreshold">
          <Name>OverWarningThreshold</Name>
          <Description>OverWarningThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Monitor.LogDirectorySize.Apache" SubElementID="OverErrorThreshold">
          <Name>OverErrorThreshold</Name>
          <Description>OverErrorThreshold</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Folders">
          <Name>Windows.Server.Webservice.LogdirectoryWatcher</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Information">
          <Name>Information</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.HealthState">
          <Name>State</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Folders.Alerts">
          <Name>Alerts</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.Computers">
          <Name>Computers - Apache Tomcat </Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.Computers">
          <Name>Computers - IIS</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.Computers">
          <Name>Computers - Apache</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.IIS.WebSites">
          <Name>WebSites - IIS</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.Apache.WebSites">
          <Name>WebSites - Apache</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.State.ApacheTomcat.WebSites">
          <Name>WebSites - Apache Tomcat</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.Apache.WebSites">
          <Name>WebSites - Apache</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.IIS.WebSites">
          <Name>WebSites - IIS</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.View.Alert.ApacheTomcat.WebSites">
          <Name>WebSites - ApacheTomcat</Name>
          <Description>Description for the new view</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher">
          <Name>Windows Server Webservice LogdirectoryWatcher</Name>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer">
          <Name>Windows Server Webservice LogdirectoryWatcher Computer</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer" SubElementID="ComputerName">
          <Name>Computer</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer" SubElementID="Description">
          <Name>Description</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer" SubElementID="WindowsVersion">
          <Name>WindowsVersion</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.IIS">
          <Name>Windows Server Webservice LogdirectoryWatcher Computer IIS</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.Apache">
          <Name>Windows Server Webservice LogdirectoryWatcher Computer Apache</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Computer.ApacheTomcat">
          <Name>Windows Server Webservice LogdirectoryWatcher Computer Apache Tomcat</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base">
          <Name>Windows Server Webservice LogdirectoryWatcher WebSite Apache</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="ComputerName">
          <Name>ComputerName</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="WindowsVersion">
          <Name>WindowsVersion</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="ComputerDescription">
          <Name>ComputerDescription</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirCreationDate">
          <Name>LogDirCreationDate</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirModifiedDate">
          <Name>LogDirModifiedDate</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirNoOfFiles">
          <Name>LogDirNoOfFiles</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirPath">
          <Name>LogDirPath</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirScanDate">
          <Name>LogDirScanDate</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="LogDirSizeInMB">
          <Name>LogDirSizeInMB</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Base" SubElementID="TimeZone">
          <Name>TimeZone</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase">
          <Name>Windows Server Webservice LogdirectoryWatcher WebSite ApacheBase</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" SubElementID="SvcDescription">
          <Name>SvcDescription</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" SubElementID="SvcDisplayName">
          <Name>SvcDisplayName</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" SubElementID="SvcVersion">
          <Name>SvcVersion</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheBase" SubElementID="Key">
          <Name>Key</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.Apache">
          <Name>Windows Server Webservice LogdirectoryWatcher WebSite Apache</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.ApacheTomcat">
          <Name>Windows Server Webservice LogdirectoryWatcher WebSite ApacheTomcat</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS">
          <Name>Windows Server Webservice LogdirectoryWatcher WebSite IIS</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" SubElementID="Bindings">
          <Name>Bindings</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" SubElementID="SiteId">
          <Name>SiteId</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" SubElementID="SiteName">
          <Name>SiteName</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" SubElementID="SitePath">
          <Name>SitePath</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.WebSite.IIS" SubElementID="Key">
          <Name>Key</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.ApacheTomcat">
          <Name>Discovery Windows Server Webservice Computer Apache Tomcat</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.IIS">
          <Name>Discovery Windows Server Webservice Computer IIS</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.Server.Webservice.Computer.Apache">
          <Name>Discovery Windows Server Webservice Computer Apache</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.Apache">
          <Name>Discovery Windows WebService WebSite Apache</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.IIS">
          <Name>Discovery Windows WebService WebSite IIS</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Windows.Server.Webservice.LogdirectoryWatcher.Discovery.Windows.WebService.WebSite.ApacheTomcat">
          <Name>Discovery Windows WebService WebSite ApacheTomcat</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>